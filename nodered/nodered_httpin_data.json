[{"id":"a66a5f5b.86b7b","type":"comment","z":"9eea58ca.a24028","name":"Web API","info":"","x":80,"y":1380,"wires":[]},{"id":"8a8b67d3.fdfd58","type":"http in","z":"9eea58ca.a24028","name":"API","url":"/api/AirCompressorData","method":"get","upload":false,"swaggerDoc":"","x":70,"y":1440,"wires":[["5069ee8d.fa87f"]]},{"id":"5069ee8d.fa87f","type":"function","z":"9eea58ca.a24028","name":"Filter Response","func":"var newMsg = {\n    req : msg.req,\n    res : msg.res,\n};\nif (msg.payload.air == 'pres') {\n    newMsg.air = flow.get('AirPressure')\n}\nif (msg.payload.stat == 'cur') {\n    newMsg.stat = flow.get('AirState')\n}\nif (msg.payload.cond == 'cur') {\n    newMsg.cond = flow.get('AirStatus')\n}\nif (msg.payload.sched == 'cur') {\n    newMsg.sched = flow.get('AirScheduler')\n}\nreturn newMsg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":240,"y":1440,"wires":[["93e6bb85.09bce8"]]},{"id":"ae88011c.eb657","type":"http response","z":"9eea58ca.a24028","name":"","statusCode":"","headers":{},"x":570,"y":1440,"wires":[]},{"id":"93e6bb85.09bce8","type":"template","z":"9eea58ca.a24028","name":"Response","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"{\"AirPressure\" : \"{{air}}\", \"AirState\" : \"{{stat}}\", \"AirStatus\" : \"{{cond}}\", \"AirScheduler\" : \"{{sched}}\"}","output":"str","x":420,"y":1440,"wires":[["ae88011c.eb657"]]}]